#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
###############################################################################
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
###############################################################################


# The check has been developed using a Netscreen on
#   Juniper SSG-520 version 6.2.0r4.0 (Firewall+VPN) and
#   Juniper SSG5-Serial version 6.1.0r2.0 (Firewall+VPN)
#
# +------------------------------------------------------------------+
# | This file has been contributed by:                               |
# |                                                                  |
# | Václav Ovsík <vaclav.ovsik@gmail.com>             Copyright 2012 |
# +------------------------------------------------------------------+

# Example info:
#   [['1', '1', 'Fan 1'], ['2', '1', 'Fan 2'], ['3', '1', 'Fan 3']]
#


def inventory_netscreen_fan(info):
    if len(info) == 0:
        return
    inv = []
    for (id, status, desc) in info:
        inv.append((id, None))
    return inv

def check_netscreen_fan(item, params, info):
    l = filter(lambda x: x[0] == item, info)
    if not l:
        return (3, 'UNKNOWN - Item not found')
    (fid, fstatus, fdesc) = l[0]
    fstatus = saveint(fstatus)
    status = {0: 2, 1: 0}[fstatus]
    txt = "%s status %s" % (fdesc, {0: 'fail(0)', 1: 'good(1)'}[fstatus])
    return (status, {0:'OK', 1:'WARN', 2:'CRIT'}[status] + ' - ' + txt)


check_info['netscreen_fan'] = (check_netscreen_fan, "Fan%s",
        0, inventory_netscreen_fan)

snmp_info['netscreen_fan'] = ( '.1.3.6.1.4.1.3224.21.2.1', [
        '1',    # NETSCREEN-CHASSIS-MIB::nsFanId
        '2',    # NETSCREEN-CHASSIS-MIB::nsFanStatus
        '3',    # NETSCREEN-CHASSIS-MIB::nsFanDesc
    ])

snmp_scan_functions['netscreen_fan'] = \
        lambda oid: oid('.1.3.6.1.2.1.1.2.0').startswith('.1.3.6.1.4.1.3224.1')
